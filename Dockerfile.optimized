# Optimized Dockerfile for Valhalla Orchestrator V2
# Multi-stage build for smaller image size and better security

# Stage 1: Build stage
FROM python:3.11-slim as builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY requirements.txt .
RUN pip install --user --no-cache-dir -r requirements.txt

# Stage 2: Runtime stage
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH=/root/.local/bin:$PATH

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Python packages from builder
COPY --from=builder /root/.local /root/.local

# Copy application files
COPY app_v2.py app.py
COPY vertex_claude_v2.py vertex_claude.py
COPY context_manager_v2.py context_manager.py

# Update imports in app.py
RUN sed -i 's/VertexClaudeV2/VertexClaude/g' app.py && \
    sed -i 's/ContextManagerV2/ContextManager/g' app.py && \
    sed -i 's/from vertex_claude_v2/from vertex_claude/g' app.py && \
    sed -i 's/from context_manager_v2/from context_manager/g' app.py

# Rename classes
RUN sed -i 's/class VertexClaudeV2/class VertexClaude/g' vertex_claude.py && \
    sed -i 's/class ContextManagerV2/class ContextManager/g' context_manager.py

# Create non-root user for security
RUN useradd -m -u 1000 valhalla && \
    chown -R valhalla:valhalla /app

# Switch to non-root user
USER valhalla

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl --fail http://localhost:8080/_stcore/health || exit 1

# Run Streamlit with optimized settings
CMD ["streamlit", "run", "app.py", \
     "--server.port=8080", \
     "--server.address=0.0.0.0", \
     "--server.headless=true", \
     "--server.runOnSave=false", \
     "--browser.gatherUsageStats=false", \
     "--server.enableCORS=false", \
     "--server.enableXsrfProtection=true"]
